Turbo Assembler	 Version 4.1	    02/11/25 12:02:05	    Page 1
stvale~1.asm



      1				     ;------------------------------------------------------------------------------
      2				     ;			     Asm Task to Valentine's day
      3				     ;			       (c) 2025	Muratov	Artyom
      4				     ;------------------------------------------------------------------------------
      5	0000			     .model tiny
      6	0000			     .code
      7				     org 100h
      8	0100  BB 015Ar		     Start:	     lea  bx, A			     ; bx = ptr	of array of symbols
      9
     10	0103  B4 09				     mov  ah, 09h		     ; color of	frame
     11	0105  B9 0028				     mov  cx, 40		     ; len   of	frame
     12	0108  BA 0005				     mov  dx, 5			     ; high  of	frame
     13	010B  BF 0668				     mov  di, 10 * 80 *	2 + 20 * 2   ; start of	print
     14
     15	010E  E8 0005				     call MakeFrame		     ; make frame
     16
     17	0111  B8 4C00				     mov  ax, 4c00h		     ; DOS Fn 4ch = exit (al)
     18	0114  CD 21				     int  21h
     19				     ;------------------------------------------------------------------------------
     20				     ; MakeFrame     Func to make frame
     21				     ; Entry:	     ah	    - color of frame
     22				     ;		     bx	    - ptr   of array of	the symbols for	frame
     23				     ;		     cx	    - len   of frame
     24				     ;		     dx	    - high  of frame
     25				     ;		     di	    - start of print (upper left cornel)
     26				     ; Exit:	     None
     27				     ; Destroy:	     ax, bx, cx, dx, di, es
     28				     ;------------------------------------------------------------------------------
     29	0116			     MakeFrame	     proc
     30	0116  57				     push di			     ; save start of print in stack
     31	0117  E8 003A				     call SetEsVideoSeg		     ; di = 0b800h; es = di
     32	011A  5F				     pop  di			     ; back start of print
     33
     34	011B  51				     push cx			     ; save cx in stack
     35	011C  E8 0021				     call MakeStrFrame		     ; make first string of frame
     36	011F  59				     pop  cx			     ; pop cx from stack
     37	0120  83 EA 02				     sub  dx, 2			     ; dx -= 2;	dx = number
     38										     ; of middle strings
     39	0123  8D 5F 03				     lea  bx, [bx + 3]		     ; bx = ptr	of start symbol
     40										     ; for middle string in array
     41	0126  81 C7 00A0	     MakeMiddle:     add  di, 80 * 2		     ; di to next string
     42	012A  51				     push cx			     ; save cx
     43	012B  E8 0012				     call MakeStrFrame		     ; make middle string
     44	012E  59				     pop  cx			     ; cx = len	of frame
     45	012F  4A				     dec  dx			     ; dx--;
     46	0130  83 FA 00				     cmp  dx, 0			     ; dx = 0?
     47	0133  75 F1				     jne  MakeMiddle		     ; loop
     48	0135  81 C7 00A0			     add  di, 80 * 2		     ; di to next string
     49
     50	0139  8D 5F 03				     lea  bx, [bx + 3]		     ; bx = ptr	of start symbol
     51										     ; for end string in array
     52	013C  E8 0001				     call MakeStrFrame		     ; make end	string of frame
     53
     54	013F  C3				     ret
     55	0140			     MakeFrame	     endp
     56
     57				     ;------------------------------------------------------------------------------
Turbo Assembler	 Version 4.1	    02/11/25 12:02:05	    Page 2
stvale~1.asm



     58				     ; MakeStrFrame  Func to make string of frame
     59				     ; Entry:	     ah	    - color of string
     60				     ;		     bx	    - array of symbol for string
     61				     ;		     cx	    - len of string
     62				     ;		     di	    - start of print string
     63				     ;		     es	    - videoseg
     64				     ; Exit:	     None
     65				     ; Destroy:	     ax, cx, si
     66				     ;------------------------------------------------------------------------------
     67	0140			     MakeStrFrame    proc
     68	0140  57				     push di			     ; save di = start of string
     69	0141  8D 37				     lea  si, [bx]		     ; si = array of symbols for
     70										     ; this string
     71	0143  AC				     lodsb			     ; ax = first symbol of string
     72										     ; mov al, ds:[si] && inc si
     73	0144  AB				     stosw			     ; mov es:[di], ax && di +=	2
     74
     75	0145  AC				     lodsb			     ; ax = middle symbol of string
     76										     ; mov al, ds:[si] && inc si
     77	0146  83 E9 02				     sub  cx, 2			     ; cx -= 2;	cx = number
     78										     ; of middle symbols
     79	0149  E8 0004				     call PutString		     ; put all middle symbols
     80	014C  AC				     lodsb			     ; ax = end	symbol of string
     81	014D  AB				     stosw			     ; mov es:[di], ax && di +=	2
     82	014E  5F				     pop  di			     ; back di = start of string
     83
     84	014F  C3				     ret
     85	0150			     MakeStrFrame    endp
     86
     87				     ;------------------------------------------------------------------------------
     88				     ; PutString     Func to put string	to consol
     89				     ; Entry:	     ah/ al - color/ symbol
     90				     ;		     cx	    - size of text
     91				     ;		     di	    - start of print
     92				     ;		     es	    - videoseg
     93				     ; Exit:	     None
     94				     ; Destroy:	     es, cx, di
     95				     ;------------------------------------------------------------------------------
     96	0150			     PutString	     proc
     97	0150  AB		     NewChar:	     stosw			     ; mov es:[di], ax && di +=	2
     98	0151  E2 FD				     loop   NewChar		     ; cx -= 1;	cx = 0?; goto NewChar
     99
    100	0153  C3				     ret
    101	0154			     PutString	     endp
    102
    103				     ;------------------------------------------------------------------------------
    104				     ; SetEsVideoSeg Func to set ptr of	videoseg to es
    105				     ; Entry:	     None
    106				     ; Exit:	     None
    107				     ; Destroy:	     es, di
    108				     ;------------------------------------------------------------------------------
    109	0154			     SetEsVideoSeg   proc
    110	0154  BF B800				     mov  di, 0b800h		     ; VIDEOSEG
    111	0157  8E C7				     mov  es, di		     ; es = videoseg
    112	0159  C3				     ret
    113	015A			     SetEsVideoSeg   endp
    114
Turbo Assembler	 Version 4.1	    02/11/25 12:02:05	    Page 3
stvale~1.asm



    115	015A  C9 CD BB BA 00 BA	C8+  A db 0c9h,	0cdh, 0bbh, 0bah, 00h, 0bah, 0c8h, 0cdh, 0bch
    116	      CD BC
    117										     ; array of	frame's	symbols
    118
    119				     end	     Start
Turbo Assembler	 Version 4.1	    02/11/25 12:02:05	    Page 4
Symbol Table




Symbol Name			  Type	 Value

??DATE				  Text	 "02/11/25"
??FILENAME			  Text	 "stvale~1"
??TIME				  Text	 "12:02:05"
??VERSION			  Number 040A
@32BIT				  Text	 0
@CODE				  Text	 DGROUP
@CODESIZE			  Text	 0
@CPU				  Text	 0101H
@CURSEG				  Text	 _TEXT
@DATA				  Text	 DGROUP
@DATASIZE			  Text	 0
@FILENAME			  Text	 STVALE~1
@INTERFACE			  Text	 000H
@MODEL				  Text	 1
@STACK				  Text	 DGROUP
@WORDSIZE			  Text	 2
A				  Byte	 DGROUP:015A
MAKEFRAME			  Near	 DGROUP:0116
MAKEMIDDLE			  Near	 DGROUP:0126
MAKESTRFRAME			  Near	 DGROUP:0140
NEWCHAR				  Near	 DGROUP:0150
PUTSTRING			  Near	 DGROUP:0150
SETESVIDEOSEG			  Near	 DGROUP:0154
START				  Near	 DGROUP:0100

Groups & Segments		  Bit Size Align  Combine Class

DGROUP				  Group
  _DATA				  16  0000 Word	  Public  DATA
  _TEXT				  16  0163 Word	  Public  CODE
